// Code generated by entc, DO NOT EDIT.

package deploymentconfig

const (
	// Label holds the string label denoting the deploymentconfig type in the database.
	Label = "deployment_config"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldCmd holds the string denoting the cmd field in the database.
	FieldCmd = "cmd"
	// FieldStartCmd holds the string denoting the startcmd field in the database.
	FieldStartCmd = "start_cmd"
	// FieldFileDst holds the string denoting the filedst field in the database.
	FieldFileDst = "file_dst"
	// EdgeDeployments holds the string denoting the deployments edge name in mutations.
	EdgeDeployments = "deployments"
	// EdgeFile holds the string denoting the file edge name in mutations.
	EdgeFile = "file"
	// EdgeImplantConfig holds the string denoting the implantconfig edge name in mutations.
	EdgeImplantConfig = "implantConfig"
	// Table holds the table name of the deploymentconfig in the database.
	Table = "deployment_configs"
	// DeploymentsTable is the table that holds the deployments relation/edge.
	DeploymentsTable = "deployments"
	// DeploymentsInverseTable is the table name for the Deployment entity.
	// It exists in this package in order to avoid circular dependency with the "deployment" package.
	DeploymentsInverseTable = "deployments"
	// DeploymentsColumn is the table column denoting the deployments relation/edge.
	DeploymentsColumn = "deployment_config"
	// FileTable is the table that holds the file relation/edge.
	FileTable = "deployment_configs"
	// FileInverseTable is the table name for the File entity.
	// It exists in this package in order to avoid circular dependency with the "file" package.
	FileInverseTable = "files"
	// FileColumn is the table column denoting the file relation/edge.
	FileColumn = "deployment_config_file"
	// ImplantConfigTable is the table that holds the implantConfig relation/edge.
	ImplantConfigTable = "deployment_configs"
	// ImplantConfigInverseTable is the table name for the ImplantConfig entity.
	// It exists in this package in order to avoid circular dependency with the "implantconfig" package.
	ImplantConfigInverseTable = "implant_configs"
	// ImplantConfigColumn is the table column denoting the implantConfig relation/edge.
	ImplantConfigColumn = "deployment_config_implant_config"
)

// Columns holds all SQL columns for deploymentconfig fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldCmd,
	FieldStartCmd,
	FieldFileDst,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "deployment_configs"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"deployment_config_file",
	"deployment_config_implant_config",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// DefaultCmd holds the default value on creation for the "cmd" field.
	DefaultCmd string
	// DefaultStartCmd holds the default value on creation for the "startCmd" field.
	DefaultStartCmd bool
	// DefaultFileDst holds the default value on creation for the "fileDst" field.
	DefaultFileDst string
)
