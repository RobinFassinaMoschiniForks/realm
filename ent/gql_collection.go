// Code generated by entc, DO NOT EDIT.

package ent

import (
	"context"

	"github.com/99designs/gqlgen/graphql"
)

// CollectFields tells the query-builder to eagerly load connected nodes by resolver context.
func (c *CredentialQuery) CollectFields(ctx context.Context, satisfies ...string) *CredentialQuery {
	if fc := graphql.GetFieldContext(ctx); fc != nil {
		c = c.collectField(graphql.GetOperationContext(ctx), fc.Field, satisfies...)
	}
	return c
}

func (c *CredentialQuery) collectField(ctx *graphql.OperationContext, field graphql.CollectedField, satisfies ...string) *CredentialQuery {
	return c
}

// CollectFields tells the query-builder to eagerly load connected nodes by resolver context.
func (t *TargetQuery) CollectFields(ctx context.Context, satisfies ...string) *TargetQuery {
	if fc := graphql.GetFieldContext(ctx); fc != nil {
		t = t.collectField(graphql.GetOperationContext(ctx), fc.Field, satisfies...)
	}
	return t
}

func (t *TargetQuery) collectField(ctx *graphql.OperationContext, field graphql.CollectedField, satisfies ...string) *TargetQuery {
	return t
}
