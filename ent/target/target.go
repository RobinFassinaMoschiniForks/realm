// Code generated by entc, DO NOT EDIT.

package target

const (
	// Label holds the string label denoting the target type in the database.
	Label = "target"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldForwardConnectIP holds the string denoting the forwardconnectip field in the database.
	FieldForwardConnectIP = "forward_connect_ip"
	// EdgeCredentials holds the string denoting the credentials edge name in mutations.
	EdgeCredentials = "credentials"
	// Table holds the table name of the target in the database.
	Table = "targets"
	// CredentialsTable is the table that holds the credentials relation/edge.
	CredentialsTable = "credentials"
	// CredentialsInverseTable is the table name for the Credential entity.
	// It exists in this package in order to avoid circular dependency with the "credential" package.
	CredentialsInverseTable = "credentials"
	// CredentialsColumn is the table column denoting the credentials relation/edge.
	CredentialsColumn = "target_credentials"
)

// Columns holds all SQL columns for target fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldForwardConnectIP,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// ForwardConnectIPValidator is a validator for the "forwardConnectIP" field. It is called by the builders before save.
	ForwardConnectIPValidator func(string) error
)
