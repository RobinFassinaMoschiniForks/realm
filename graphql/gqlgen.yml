schema:
  - schema/types.graphql      # Common Golang type definitions.
  - schema/relay.graphql      # Types and Definitions required by Relay.  
  - schema/query.graphql      # API Query Definitions.
  - schema/mutation.graphql   # API Mutation Definitions.
  - schema/credential.graphql # Credential GraphQL Schema.
  - schema/deployment.graphql # Deployment GraphQL Schema.
  - schema/file.graphql       # File GraphQL Schema.
  - schema/tag.graphql        # Tag GraphQL Schema.
  - schema/target.graphql     # Target GraphQL Schema.
  - schema/implant.graphql    # Implant GraphQL Schemas.
  - schema/ent.graphql        # The ent.graphql schema was generated by Ent.

resolver:
  # Tell gqlgen to generate resolvers next to the schema file.
  layout: follow-schema
  dir: .

# gqlgen will search for any type names in the schema in the generated
# ent package. If they match it will use them, otherwise it will new ones.
autobind:
  - github.com/kcarretto/realm/ent
  - github.com/kcarretto/realm/ent/credential
  - github.com/kcarretto/realm/ent/deployment
  - github.com/kcarretto/realm/ent/deploymentconfig
  - github.com/kcarretto/realm/ent/file
  - github.com/kcarretto/realm/ent/implant
  - github.com/kcarretto/realm/ent/implantcallbackconfig
  - github.com/kcarretto/realm/ent/implantconfig
  - github.com/kcarretto/realm/ent/implantserviceconfig
  - github.com/kcarretto/realm/ent/tag
  - github.com/kcarretto/realm/ent/target

struct_tag: json

models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.Int
  Node:
    model:
      # ent.Noder is the new interface generated by the Node template.
      - github.com/kcarretto/realm/ent.Noder
      # - entgo.io/contrib/entgql/internal/todo/ent.Noder
 
  # Custom mapping from GraphQL `CredentialKind`
  # to the generated `credential.Kind` enum type.
  CredentialKind:
    model:
      - github.com/kcarretto/realm/ent/credential.Kind